$width:12px;
.header{
  border: 1px solid #ddd;
  padding: 10px;
}
.searchInput{
  width:200px;
}
.myTestBox{
  a{
    &:link{
      color:red;
    }
    &:visited{
      color:yellow;
    }
    &:hover{
      color:pink;
    }
    &:active{
      color:rebeccapurple;
    }
  }

}
.testFont{
  font:{
    family:fantasy;
    size:20px;
    weight: bold;
  }
}

@mixin test($selector:'.testDiv') {
  .myTestBox #{$selector} {
    background: #dddddd;
    height: 30px;
  }
}

@include test('.testDiv');


.seriousError{
  @extend .error;
  font-weight: bold;
  font-size:40px;
  border:3px solid #000;
}
.error{
  color:red;
  .bg{
    background: yellow;
  }
}
.myText{
  @if 1+1==2 {
    color:red;
  }
  @else if 1+2==3{
    color:yellow;
  }
  @else{
    color:green;
  }
}


@function setWidth($number){
  @return $number * 100vw /750
}
$grid-width: 40px;
$gutter-width: 10px;

@function grid-width($n) {
  @return $n * $grid-width + ($n - 1) * $gutter-width;
}
//.test{
//  width:grid-width(5);
//}

//声明必须在调用之前才可以
$testWidth: 100px;
@function myWidth(){
  @return 100px;
}
.test{
  width:myWidth();
}



#context span%extreme {
  color: blue;
  font-weight: bold;
  font-size: 2em;
  background: #ddd;
}
.notice {
  @extend %extreme;
}
#notice{
  @extend %extreme
}
.notice{
  color:black !important;
}

.parent {
  .subParent{
    @at-root .child {
      background: yellow;
    }
  }
}

// rem 单位换算：定为 75px 只是方便运算，750px-75px、640-64px、1080px-108px，如此类推
$vm_fontsize: 75; // iPhone 6尺寸的根元素大小基准值
@function rem($px) {
  @return ($px / $vm_fontsize ) * 1rem;
}
// 根元素大小使用 vw 单位
$vm_design: 750;
html {
  font-size: ($vm_fontsize / ($vm_design / 2)) * 100vw;
  // 同时，通过Media Queries 限制根元素最大最小值
  @media screen and (max-width: 320px) {
    font-size: 64px;
  }
  @media screen and (min-width: 540px) {
    font-size: 108px;
  }
}
// body 也增加最大最小宽度限制，避免默认100%宽度的 block 元素跟随 body 而过大过小
//body {
//  max-width: 540px;
//  min-width: 320px;
//}

.myTestRem{
  font-size:rem(20)
}





